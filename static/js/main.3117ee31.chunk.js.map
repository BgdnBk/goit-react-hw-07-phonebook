{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Form/Form.module.css","components/Filter/Filter.module.css","components/Title/Title.module.css","redux/phonebook/phonebook-action.js","redux/phonebook/phonebook-reducer.js","redux/store.js","redux/phonebook/phonebook-operation.js","components/Form/Form.js","redux/phonebook/phonebook-selector.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/Title/Title.js","App.js","index.js"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","contacts","createReducer","_","payload","state","console","log","filter","id","loading","combineReducers","store","configureStore","reducer","phonebook","phonebookReducer","devTools","process","axios","defaults","baseURL","name","number","dispatch","contact","post","then","data","catch","e","contactId","delete","a","get","Form","InputValues","currentTarget","value","setState","addContact","preventDefault","toast","error","props","onSubmit","resetInputValues","idName","shortid","generate","idNumber","className","s","form","this","htmlFor","labelName","type","onChange","autoComplete","labelNumber","pattern","btnForm","Component","connect","contactList","newName","some","checkName","phonebookOperations","getFilter","getAllContacts","getPhonebookFilter","createSelector","filterValues","toLowerCase","includes","phonebookSelector","searchContact","phonebookAction","target","containerSearch","labelSearch","inputSearch","onDeleted","TransitionGroup","component","classNames","table","map","CSSTransition","timeout","unmountOnExit","btnList","onClick","Title","Phonebook","fetchContacts","container","autoClose","in","appear","style","phonebookOperation","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3117ee31.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__2aBn4\",\"form\":\"ContactForm_form__3b5B7\",\"contactList\":\"ContactForm_contactList___tsVS\",\"btnList\":\"ContactForm_btnList__3KjeW\",\"table\":\"ContactForm_table__3q4XC\",\"enter\":\"ContactForm_enter__3NxDX\",\"enterActive\":\"ContactForm_enterActive__34_aB\",\"exit\":\"ContactForm_exit__u66YT\",\"exitActive\":\"ContactForm_exitActive__1TBIV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2IZif\",\"labelName\":\"Form_labelName__2f1L0\",\"labelNumber\":\"Form_labelNumber__BH2vx\",\"btnForm\":\"Form_btnForm__BlRN7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerSearch\":\"Filter_containerSearch__2W-ru\",\"labelSearch\":\"Filter_labelSearch__gPQ8K\",\"inputSearch\":\"Filter_inputSearch__2EBli\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"Title_appear__zA_Cp\",\"appearActive\":\"Title_appearActive__1znK-\",\"enter\":\"Title_enter__2KSTA\",\"enterActive\":\"Title_enterActive__1iZk4\",\"exit\":\"Title_exit__2KMy3\",\"exitActive\":\"Title_exitActive__1dOoV\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchContactRequest = createAction(\r\n  \"phonebook/fetchContactRequest\"\r\n);\r\nexport const fetchContactSuccess = createAction(\r\n  \"phonebook/fetchContactSuccess\"\r\n);\r\nexport const fetchContactError = createAction(\"phonebook/fetchContactError\");\r\n\r\nexport const addContactRequest = createAction(\"phonebook/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"phonebook/addContactSuccess\");\r\nexport const addContactError = createAction(\"phonebook/addContactError\");\r\n\r\nexport const deleteContactRequest = createAction(\r\n  \"phonebook/deleteContactRequest\"\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  \"phonebook/deleteContactSuccess\"\r\n);\r\nexport const deleteContactError = createAction(\"phonebook/deleteContactError\");\r\n\r\n// export const deleteContact = createAction(\"phonebook/delete\");\r\nexport const changeFilter = createAction(\"phonebook/changeFilter\");\r\n\r\n// export default {\r\n//   addContactRequest,\r\n//   addContactSuccess,\r\n//   addContactError,\r\n//   deleteContact,\r\n//   filter,\r\n// };\r\n\r\n// const addContact = (newName, number) => (dispatch) => {\r\n//   const contact = { newName, number };\r\n\r\n//   dispatch({ type: \"phonebook/addContactRequest\" });\r\n\r\n//   axios\r\n//     .post(\"/contacts\", contact)\r\n//     .then(({ data }) =>\r\n//       dispatch({ type: \"phonebook/addContactSuccess\", payload: data })\r\n//     )\r\n//     .catch((e) => dispatch({ type: \"phonebook/addContactError\", payload: e }));\r\n// };\r\n\r\n// const addContact = createAction(\"phonebook/add\", ({ name, number }) => ({\r\n//   payload: {\r\n//     id: shortid.generate(),\r\n//     name,\r\n//     number,\r\n//   },\r\n// }));\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  changeFilter,\r\n} from \"./phonebook-action\";\r\n\r\nconst contacts = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => {\r\n    console.log(\"payload addContast\", payload);\r\n    return [...state, payload];\r\n  },\r\n  [deleteContactSuccess]: (state, { payload }) => {\r\n    return state.filter(({ id }) => id !== payload);\r\n  },\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactRequest]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  loading,\r\n});\r\n\r\n// addContactSuccess;\r\n// [action.addContact];\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport phonebookReducer from \"./phonebook/phonebook-reducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: phonebookReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from \"./phonebook-action\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:4040/\";\r\n\r\nconst fetchContacts = () => async (dispatch) => {\r\n  dispatch(fetchContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (e) {\r\n    dispatch(fetchContactError(e));\r\n  }\r\n\r\n  // axios\r\n  //   .get(\"/contacts\")\r\n  //   .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n  //   .catch((e) => dispatch(fetchContactError(e)));\r\n};\r\n\r\nconst addContact = ({ name, number }) => (dispatch) => {\r\n  const contact = { name, number };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch((e) => dispatch(addContactError(e)));\r\n};\r\n\r\nconst deleteContact = (contactId) => (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch((e) => dispatch(deleteContactError(e)));\r\n  console.log(contactId);\r\n};\r\n\r\nexport default { addContact, deleteContact, fetchContacts };\r\n","import React, { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport s from \"../Form/Form.module.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport { connect } from \"react-redux\";\r\nimport phonebookOperations from \"../../redux/phonebook/phonebook-operation\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  InputValues = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        this.setState({ name: value });\r\n        break;\r\n      case \"number\":\r\n        this.setState({ number: value });\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  addContact = (e) => {\r\n    e.preventDefault();\r\n\r\n    // const checkName = this.props.contactList({ name: this.state.name });\r\n    const checNumer = this.state.number;\r\n\r\n    // if (checkName) {\r\n    //   return toast.error(\"Это имя уже существует\");\r\n    // }\r\n\r\n    if (checNumer === \"\") {\r\n      return toast.error(\"Введите номер\");\r\n    }\r\n\r\n    this.props.onSubmit({\r\n      // id: shortid.generate(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    });\r\n    this.resetInputValues();\r\n  };\r\n\r\n  resetInputValues = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const idName = shortid.generate();\r\n    const idNumber = shortid.generate();\r\n\r\n    return (\r\n      <form className={s.form} onSubmit={this.addContact}>\r\n        <label htmlFor={idName} className={s.labelName}>\r\n          Имя\r\n        </label>\r\n        <input\r\n          id={idName}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={this.state.name}\r\n          onChange={this.InputValues}\r\n          autoComplete=\"off\"\r\n        ></input>\r\n        <label htmlFor={idNumber} className={s.labelNumber}>\r\n          Номер\r\n        </label>\r\n        <input\r\n          id={idNumber}\r\n          type=\"tel\"\r\n          pattern=\"^[ 0-9]+$\"\r\n          name=\"number\"\r\n          value={this.state.number}\r\n          onChange={this.InputValues}\r\n          autoComplete=\"off\"\r\n        ></input>\r\n        <button className={s.btnForm} type=\"submite\">\r\n          Добавить контакт\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst checkName = (contactList, newName) => {\r\n  return contactList?.some(({ name }) => name === newName);\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contactList: state.phonebook.contacts,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (newName, number, contactList) => {\r\n    if (checkName(contactList, newName)) {\r\n      return toast.error(\"Это имя уже существует\");\r\n    }\r\n    dispatch(phonebookOperations.addContact(newName, number));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getFilter = (state) => state.phonebook.filter;\r\nconst getAllContacts = (state) => state.phonebook.contacts;\r\n\r\n// const getPhonebookFilter = (state) => {\r\n//   const filter = getFilter(state);\r\n//   const allContacts = getAllContacts(state);\r\n//   const filterValues = filter.toLowerCase();\r\n\r\n//   return allContacts.filter(({ name }) =>\r\n//     name?.toLowerCase().includes(filterValues)\r\n//   );\r\n// };\r\n\r\nconst getPhonebookFilter = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const filterValues = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name?.toLowerCase().includes(filterValues)\r\n    );\r\n  }\r\n);\r\n\r\nexport default {\r\n  getFilter,\r\n  getAllContacts,\r\n  getPhonebookFilter,\r\n};\r\n","import React from \"react\";\r\nimport shortid from \"shortid\";\r\nimport s from \"../Filter/Filter.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as phonebookAction from \"../../redux/phonebook/phonebook-action\";\r\nimport phonebookSelector from \"../../redux/phonebook/phonebook-selector\";\r\n\r\nfunction Filter({ value, searchContact }) {\r\n  const id = shortid.generate();\r\n\r\n  return (\r\n    <div className={s.containerSearch}>\r\n      <label className={s.labelSearch} htmlFor={id}>\r\n        Поиск контакта по имени\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={searchContact}\r\n        id={id}\r\n        className={s.inputSearch}\r\n      ></input>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  value: phonebookSelector.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  searchContact: (e) => dispatch(phonebookAction.changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport s from \"../ContactForm/ContactForm.module.css\";\r\nimport { connect } from \"react-redux\";\r\n// import phonebookOperations from \"../../redux/phonebook/phonebook-operation\";\r\n// import phonebookSelector from \"../../redux/phonebook/phonebook-selector\";\r\nimport { phonebookOperations, phonebookSelector } from \"../../redux/phonebook\";\r\n\r\nfunction СontactForm({ contactList, onDeleted }) {\r\n  return (\r\n    <TransitionGroup component=\"ul\" classNames={s.table}>\r\n      {contactList.map(({ id, name, number }) => {\r\n        return (\r\n          <CSSTransition key={id} timeout={250} classNames={s} unmountOnExit>\r\n            <li>\r\n              {name}: {number}\r\n              <button\r\n                className={s.btnList}\r\n                type=\"button\"\r\n                onClick={() => onDeleted(id)}\r\n              >\r\n                Удалить\r\n              </button>\r\n            </li>\r\n          </CSSTransition>\r\n        );\r\n      })}\r\n    </TransitionGroup>\r\n  );\r\n}\r\n\r\n// const getFilter = (allContacts, filter) => {\r\n//   const filterValues = filter.toLowerCase();\r\n//   console.log(allContacts);\r\n\r\n//   return allContacts.filter(({ name }) =>\r\n//     name?.toLowerCase().includes(filterValues)\r\n//   );\r\n// };\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contactList: phonebookSelector.getPhonebookFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleted: (id) => dispatch(phonebookOperations.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(СontactForm);\r\n","import React from \"react\";\r\nimport s from \"../ContactForm/ContactForm.module.css\";\r\n\r\nfunction Title() {\r\n  return (\r\n    <div>\r\n      <h1 className={s.form}>Телефонная книга</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Title;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Form from \"./components/Form/Form\";\r\nimport Filter from \"./components/Filter/Filter\";\r\nimport СontactForm from \"./components/ContactForm/ContactForm\";\r\nimport style from \"./components/Title/Title.module.css\";\r\nimport s from \"./components/ContactForm/ContactForm.module.css\";\r\nimport Title from \"./components/Title/Title\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport phonebookOperation from \"../src/redux/phonebook/phonebook-operation\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./App.css\";\r\n\r\nclass Phonebook extends Component {\r\n  state = {\r\n    // contacts: [],\r\n    // filter: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={s.container}>\r\n        <ToastContainer autoClose={3000} />\r\n        <CSSTransition\r\n          in={true}\r\n          appear={true}\r\n          classNames={style}\r\n          timeout={500}\r\n          unmountOnExit\r\n        >\r\n          <Title />\r\n        </CSSTransition>\r\n        <Form />\r\n        <h2 className={s.contactList}>Контакты</h2>\r\n        <Filter />\r\n        <СontactForm />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchContacts: () => dispatch(phonebookOperation.fetchContacts()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Phonebook);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}